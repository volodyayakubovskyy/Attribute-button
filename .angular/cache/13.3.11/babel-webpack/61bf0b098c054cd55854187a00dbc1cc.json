{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, Input, HostBinding, NgModule } from '@angular/core';\nconst _c0 = [\"attr-button\", \"\"];\nconst _c1 = [\"*\"];\nlet AttrButtonComponent = /*#__PURE__*/(() => {\n  class AttrButtonComponent {\n    constructor() {\n      this.size = 'default';\n      this.color = 'primary';\n      this.tabIndex = null;\n      this.disabled = false;\n    }\n\n    get classList() {\n      let classes = ['attr-button'];\n\n      switch (this.color) {\n        case 'primary':\n          {\n            classes = [...classes, 'attr-button-primary'];\n            break;\n          }\n\n        case 'accent':\n          {\n            classes = [...classes, 'attr-button-accent'];\n            break;\n          }\n\n        case 'warn':\n          {\n            classes = [...classes, 'attr-button-warn'];\n            break;\n          }\n      }\n\n      if (this.size === 'small') {\n        classes = [...classes, 'attr-button-small'];\n      }\n\n      return classes.join(' ');\n    }\n\n    get buttonTabIndex() {\n      return this.disabled ? -1 : this.tabIndex === null ? null : this.tabIndex;\n    }\n\n  }\n\n  AttrButtonComponent.ɵfac = function AttrButtonComponent_Factory(t) {\n    return new (t || AttrButtonComponent)();\n  };\n\n  AttrButtonComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: AttrButtonComponent,\n    selectors: [[\"button\", \"attr-button\", \"\"], [\"a\", \"attr-button\", \"\"]],\n    hostVars: 4,\n    hostBindings: function AttrButtonComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"disabled\", ctx.disabled)(\"tabindex\", ctx.buttonTabIndex);\n        i0.ɵɵclassMap(ctx.classList);\n      }\n    },\n    inputs: {\n      size: \"size\",\n      color: \"color\",\n      tabIndex: \"tabIndex\",\n      disabled: \"disabled\"\n    },\n    exportAs: [\"attrButton\"],\n    attrs: _c0,\n    ngContentSelectors: _c1,\n    decls: 1,\n    vars: 0,\n    template: function AttrButtonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return AttrButtonComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet AttrButtonModule = /*#__PURE__*/(() => {\n  class AttrButtonModule {}\n\n  AttrButtonModule.ɵfac = function AttrButtonModule_Factory(t) {\n    return new (t || AttrButtonModule)();\n  };\n\n  AttrButtonModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: AttrButtonModule\n  });\n  AttrButtonModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[]]\n  });\n  return AttrButtonModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/*\r\n * Public API Surface of attr-button\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { AttrButtonComponent, AttrButtonModule }; //# sourceMappingURL=attr-button.mjs.map","map":null,"metadata":{},"sourceType":"module"}