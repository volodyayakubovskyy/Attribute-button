{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, Input, HostBinding, NgModule } from '@angular/core';\nconst _c0 = [\"attr-button\", \"\"];\nconst _c1 = [\"*\"];\n\nclass AttrButtonComponent {\n  constructor() {\n    this.size = 'default';\n    this.color = 'primary';\n    this.tabIndex = null;\n    this.disabled = false;\n  }\n\n  get classList() {\n    let classes = ['attr-button'];\n\n    switch (this.color) {\n      case 'primary':\n        {\n          classes = [...classes, 'attr-button-primary'];\n          break;\n        }\n\n      case 'accent':\n        {\n          classes = [...classes, 'attr-button-accent'];\n          break;\n        }\n\n      case 'warn':\n        {\n          classes = [...classes, 'attr-button-warn'];\n          break;\n        }\n    }\n\n    if (this.size === 'small') {\n      classes = [...classes, 'attr-button-small'];\n    }\n\n    return classes.join(' ');\n  }\n\n  get buttonTabIndex() {\n    return this.disabled ? -1 : this.tabIndex === null ? null : this.tabIndex;\n  }\n\n}\n\nAttrButtonComponent.ɵfac = function AttrButtonComponent_Factory(t) {\n  return new (t || AttrButtonComponent)();\n};\n\nAttrButtonComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AttrButtonComponent,\n  selectors: [[\"button\", \"attr-button\", \"\"], [\"a\", \"attr-button\", \"\"]],\n  hostVars: 4,\n  hostBindings: function AttrButtonComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵhostProperty(\"disabled\", ctx.disabled)(\"tabindex\", ctx.buttonTabIndex);\n      i0.ɵɵclassMap(ctx.classList);\n    }\n  },\n  inputs: {\n    size: \"size\",\n    color: \"color\",\n    tabIndex: \"tabIndex\",\n    disabled: \"disabled\"\n  },\n  exportAs: [\"attrButton\"],\n  attrs: _c0,\n  ngContentSelectors: _c1,\n  decls: 1,\n  vars: 0,\n  template: function AttrButtonComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AttrButtonComponent, [{\n    type: Component,\n    args: [{\n      selector: 'button[attr-button], a[attr-button]',\n      exportAs: 'attrButton',\n      template: '<ng-content></ng-content>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], null, {\n    size: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    tabIndex: [{\n      type: Input\n    }],\n    disabled: [{\n      type: HostBinding,\n      args: ['disabled']\n    }, {\n      type: Input\n    }],\n    classList: [{\n      type: HostBinding,\n      args: ['class']\n    }],\n    buttonTabIndex: [{\n      type: HostBinding,\n      args: ['tabindex']\n    }]\n  });\n})();\n\nclass AttrButtonModule {}\n\nAttrButtonModule.ɵfac = function AttrButtonModule_Factory(t) {\n  return new (t || AttrButtonModule)();\n};\n\nAttrButtonModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: AttrButtonModule\n});\nAttrButtonModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AttrButtonModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [AttrButtonComponent],\n      imports: [],\n      exports: [AttrButtonComponent]\n    }]\n  }], null, null);\n})();\n/*\r\n * Public API Surface of attr-button\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { AttrButtonComponent, AttrButtonModule };","map":{"version":3,"sources":["C:/Users/vyaku/Work/custom-lib-button/dist/attr-button/fesm2015/attr-button.mjs"],"names":["i0","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","HostBinding","NgModule","AttrButtonComponent","constructor","size","color","tabIndex","disabled","classList","classes","join","buttonTabIndex","ɵfac","ɵcmp","type","args","selector","exportAs","template","changeDetection","OnPush","encapsulation","None","AttrButtonModule","ɵmod","ɵinj","declarations","imports","exports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, Input, HostBinding, NgModule } from '@angular/core';\n\nclass AttrButtonComponent {\r\n    constructor() {\r\n        this.size = 'default';\r\n        this.color = 'primary';\r\n        this.tabIndex = null;\r\n        this.disabled = false;\r\n    }\r\n    get classList() {\r\n        let classes = ['attr-button'];\r\n        switch (this.color) {\r\n            case 'primary': {\r\n                classes = [...classes, 'attr-button-primary'];\r\n                break;\r\n            }\r\n            case 'accent': {\r\n                classes = [...classes, 'attr-button-accent'];\r\n                break;\r\n            }\r\n            case 'warn': {\r\n                classes = [...classes, 'attr-button-warn'];\r\n                break;\r\n            }\r\n        }\r\n        if (this.size === 'small') {\r\n            classes = [...classes, 'attr-button-small'];\r\n        }\r\n        return classes.join(' ');\r\n    }\r\n    get buttonTabIndex() {\r\n        return this.disabled ? -1 : (this.tabIndex === null ? null : this.tabIndex);\r\n    }\r\n}\r\nAttrButtonComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: AttrButtonComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nAttrButtonComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: AttrButtonComponent, selector: \"button[attr-button], a[attr-button]\", inputs: { size: \"size\", color: \"color\", tabIndex: \"tabIndex\", disabled: \"disabled\" }, host: { properties: { \"disabled\": \"this.disabled\", \"class\": \"this.classList\", \"tabindex\": \"this.buttonTabIndex\" } }, exportAs: [\"attrButton\"], ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: AttrButtonComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'button[attr-button], a[attr-button]',\r\n                    exportAs: 'attrButton',\r\n                    template: '<ng-content></ng-content>',\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                    encapsulation: ViewEncapsulation.None\r\n                }]\r\n        }], propDecorators: { size: [{\r\n                type: Input\r\n            }], color: [{\r\n                type: Input\r\n            }], tabIndex: [{\r\n                type: Input\r\n            }], disabled: [{\r\n                type: HostBinding,\r\n                args: ['disabled']\r\n            }, {\r\n                type: Input\r\n            }], classList: [{\r\n                type: HostBinding,\r\n                args: ['class']\r\n            }], buttonTabIndex: [{\r\n                type: HostBinding,\r\n                args: ['tabindex']\r\n            }] } });\n\nclass AttrButtonModule {\r\n}\r\nAttrButtonModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: AttrButtonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nAttrButtonModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: AttrButtonModule, declarations: [AttrButtonComponent], exports: [AttrButtonComponent] });\r\nAttrButtonModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: AttrButtonModule, imports: [[]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: AttrButtonModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        AttrButtonComponent\r\n                    ],\r\n                    imports: [],\r\n                    exports: [\r\n                        AttrButtonComponent\r\n                    ]\r\n                }]\r\n        }] });\n\n/*\r\n * Public API Surface of attr-button\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { AttrButtonComponent, AttrButtonModule };\n"]},"metadata":{},"sourceType":"module"}